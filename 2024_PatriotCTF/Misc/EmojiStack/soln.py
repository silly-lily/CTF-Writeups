stack = '游녤游녤游녤游녤游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녤游대08游녨游대34游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녨游대48游녤游대15游녨游대5e游녣游대07游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녤游대02游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녨游대42游녤游대02游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녤游대17游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녣游대14游녨游대20游녤游대06游녨游대51游녤游대0c游녨游대34游녤游녤游녨游대46游녣游대14游녨游대4d游녣游대01游녨游대51游녤游대04游녨游대20游녤游대03游녨游대2f游녤游녤游녤游녤游녤游녤游녤游녤游녨游대4d游녣游대17游녨游대42游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녨游대7c游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녤游대0c游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녤游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녤游대0c游녨游대32游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녤游대04游녨游대5e游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녨游대47游녣游대0f游녨游대46游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녤游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녣游대03游녨游대20游녣游대08游녨游대5e游녤游대10游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녣游대1d游녨游대40游녤游대10游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녨游녤游녤游녤游녤游녨游대5e游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游녣游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫游녤游눫'

j = 0
cells = [0]*256
out = ''

def map_emoji(emoji):

    global j, cells, out

    if emoji == '游녤':

        j+=1

    elif emoji == '游녣':

        j-=1

    elif emoji == '游녨':

        cells[j]+=1

        if cells[j] > 255:

            cells[j] = 255

    elif emoji == '游녩':

        cells[j]-=1

        if cells[j] < 0:

            cells[j] = 0

    elif emoji == '游눫':

        out+=chr(cells[j])

for i in range(0,len(stack)):

    if stack[i] == '游대':

        prev = stack[i-1]
        rep_num = int(stack[i+1:i+3],16)

        for k in range(0,rep_num):

            map_emoji(prev)
            
        i+=2

    else:

        map_emoji(stack[i])


print(out)